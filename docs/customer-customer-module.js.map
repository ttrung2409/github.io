{"version":3,"sources":["webpack:///./src/app/customer/components/customer-list/customer-list.component.html","webpack:///./src/app/customer/components/customer-list/customer-list.component.scss","webpack:///./src/app/customer/components/customer-list/customer-list.component.ts","webpack:///./src/app/customer/components/customer-search/customer-search.component.html","webpack:///./src/app/customer/components/customer-search/customer-search.component.scss","webpack:///./src/app/customer/components/customer-search/customer-search.component.ts","webpack:///./src/app/customer/components/customer/customer.component.html","webpack:///./src/app/customer/components/customer/customer.component.scss","webpack:///./src/app/customer/components/customer/customer.component.ts","webpack:///./src/app/customer/customer.module.ts","webpack:///./src/app/customer/customer.routing.ts"],"names":[],"mappings":"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","file":"customer-customer-module.js","sourcesContent":["module.exports = \"<div class=\\\"customer-list\\\">\\r\\n  <toolbar>\\r\\n    <toolbar-title>Quản lý khách hàng</toolbar-title>\\r\\n    <actions>\\r\\n      <button mat-button (click)=\\\"showSearchView()\\\">\\r\\n        <mat-icon>filter_list</mat-icon>\\r\\n        (F2)\\r\\n      </button>\\r\\n    </actions>\\r\\n  </toolbar>\\r\\n  <grid [columns]=\\\"columns\\\" [dataSource]=\\\"customers\\\" (rowClick)=\\\"onSelect($event)\\\" (select)=\\\"onSelect($event)\\\"></grid>\\r\\n  <flyout #flyout [containerSelector]=\\\"'.customer-list'\\\" (onHide)=\\\"flyoutView = ''\\\">\\r\\n    <content>\\r\\n      <customer-search #searchView\\r\\n                       *ngIf=\\\"flyoutView == 'search'\\\"\\r\\n                       (search)=\\\"onSearch($event)\\\"\\r\\n                       (cancel)=\\\"flyout.hide()\\\">\\r\\n      </customer-search>\\r\\n      <customer #customerView\\r\\n                *ngIf=\\\"flyoutView == 'customer'\\\"\\r\\n                [id]=\\\"selectedCustomer.id\\\"\\r\\n                (cancel)=\\\"flyout.hide()\\\"\\r\\n                (commit)=\\\"flyout.hide()\\\"></customer>\\r\\n    </content>\\r\\n  </flyout>\\r\\n  <button mat-fab>\\r\\n    <mat-icon>add</mat-icon>\\r\\n  </button>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy, ViewChild, HostListener } from '@angular/core';\nimport Customer from '../../../models/customer';\r\nimport { GridColumn } from '../../../widgets/grid/grid.component';\r\nimport CustomerService from '../../../services/customer.service';\r\nimport { Subscription, fromEvent } from 'rxjs';\r\nimport { FlyoutComponent } from '../../../widgets/flyout/flyout.component';\r\nimport { Key } from 'ts-keycode-enum';\r\nimport { CustomerComponent } from '../customer/customer.component';\r\nimport { CustomerSearchComponent } from '../customer-search/customer-search.component';\r\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.scss']\n})\nexport class CustomerListComponent implements OnInit, OnDestroy {\n  private _subscription = new Subscription();\n\n  constructor(private customerService: CustomerService) { }\n\n  @ViewChild('flyout') flyout: FlyoutComponent;\n  @ViewChild('searchView') searchView: CustomerSearchComponent;\n  @ViewChild('customerView') customerView: CustomerComponent;\n\n  customers: Customer[];\n  selectedCustomer: Customer = new Customer();\n  flyoutView: string;\n\n  columns: GridColumn[] = [    \n    new GridColumn({\n      caption: 'Tên KH',\n      field: 'name'\n    }),\n    new GridColumn({\n      caption: 'Loại KH',\n      field: 'type.name',\n    }),\n    new GridColumn({\n      caption: 'Số ĐT',\n      field: 'phoneNumber'\n    }),\n    new GridColumn({\n      caption: 'Email',\n      field: 'email'\n    }),\n    new GridColumn({\n      caption: 'Địa chỉ',\n      field: 'address'\n    })\n  ];\n\n  ngOnInit() {\n    this._subscription.add(this.customerService.getCustomers().subscribe(customers => {\n      this.customers = customers;\n    }));\n\n    this._subscription.add(fromEvent(document, 'keyup').subscribe((event: KeyboardEvent) => {\r\n      switch (event.keyCode) {\r\n        case Key.F2:\r\n          this.showSearchView();\r\n          break;\r\n      }\r\n    }));\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n\n  onSelect(customer) {\n    this.selectedCustomer = customer;\n    this.flyoutView = 'customer';    \n    this.flyout.show().then(() => {\n      this.customerView.focus();\n    });\n  }\n\n  onSearch(model) {\n    this.flyout.hide();    \n  }\n\n  showSearchView() {\n    this.flyoutView = 'search';\n    this.flyout.show().then(() => {\n      this.searchView.focus();\n    });\n  }\n}\n","module.exports = \"<div class=\\\"ui grid\\\">\\r\\n  <div class=\\\"sixteen wide column\\\">\\r\\n    <mat-form-field>\\r\\n      <input #customerNameInput matInput [(ngModel)]=\\\"model.name\\\" placeholder=\\\"Tên KH\\\" />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"eight wide column\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput [(ngModel)]=\\\"model.phoneNumber\\\" placeholder=\\\"Số ĐT\\\" />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"eight wide column\\\">\\r\\n    <dropdown [options]=\\\"customerTypes\\\"\\r\\n              [valueMember]=\\\"'id'\\\"\\r\\n              [displayMember]=\\\"'name'\\\"\\r\\n              [(model)]=\\\"model.typeId\\\"\\r\\n              [label]=\\\"'Loại KH'\\\">\\r\\n    </dropdown>\\r\\n  </div>\\r\\n  <div class=\\\"sixteen wide column\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput [(ngModel)]=\\\"model.email\\\" placeholder=\\\"Email\\\" />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"sixteen wide column\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput [(ngModel)]=\\\"model.address\\\" placeholder=\\\"Địa chỉ\\\" />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"sixteen wide column\\\">\\r\\n    <dropdown [options]=\\\"[{value: 1, text: 'Hoạt động'},{value: 0, text: 'Không hoạt động'}]\\\"\\r\\n              [label]=\\\"'Tình trạng'\\\"\\r\\n              [(model)]=\\\"model.isActive\\\">\\r\\n    </dropdown>\\r\\n  </div>\\r\\n  <div class=\\\"actions\\\">\\r\\n    <button mat-flat-button (click)=\\\"doCancel()\\\">Hủy (Esc)</button>\\r\\n    <button mat-flat-button (click)=\\\"doSearch()\\\" color=\\\"primary\\\">Tìm (F4)</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild, ElementRef, HostListener, EventEmitter, Output } from '@angular/core';\nimport CustomerService from '../../../services/customer.service';\r\nimport { Key } from 'ts-keycode-enum';\r\ndeclare var $: any;\r\n\n@Component({\n  selector: 'customer-search',\n  templateUrl: './customer-search.component.html',\n  styleUrls: ['./customer-search.component.scss']\n})\nexport class CustomerSearchComponent implements OnInit {\n\n  constructor(private customerService: CustomerService) { }\n\n  @Output() cancel = new EventEmitter();\n  @Output() search = new EventEmitter();\n\n  @ViewChild('customerNameInput') customerNameInput: ElementRef;\n\n  @HostListener('keyup', ['$event']) onKeyup(e: KeyboardEvent) {\n    switch (e.keyCode) {\n      case Key.Escape:\n        this.doCancel();\n        break;\n      case Key.F4:\n        this.doSearch();\n        break;\n    }\n  }\n\n  model: any = {};\n  customerTypes: any[];\n\n  ngOnInit() {\n    this.customerService.getCustomerTypes().subscribe(types => this.customerTypes = types);\n  }\n\n  focus() {\n    $(this.customerNameInput.nativeElement).focus();\n  }\n\n  doCancel() {\n    this.cancel.emit();\n  }\n\n  doSearch() {\n    this.search.emit();\n  }\n}\n","module.exports = \"<div class=\\\"ui grid\\\">\\r\\n  <div class=\\\"sixteen wide column\\\">\\r\\n    <mat-form-field>\\r\\n      <input #customerNameInput matInput [(ngModel)]=\\\"customer.name\\\" placeholder=\\\"Tên KH\\\" required />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"eight wide column\\\">\\r\\n    <dropdown [options]=\\\"customerTypes\\\"\\r\\n              [valueMember]=\\\"'id'\\\"\\r\\n              [displayMember]=\\\"'name'\\\"\\r\\n              [(model)]=\\\"customer.typeId\\\"\\r\\n              [label]=\\\"'Loại KH'\\\">\\r\\n    </dropdown>\\r\\n  </div>\\r\\n  <div class=\\\"eight wide column\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput [(ngModel)]=\\\"customer.phoneNumber\\\" placeholder=\\\"Số ĐT\\\" required />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"sixteen wide column\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput [(ngModel)]=\\\"customer.email\\\" placeholder=\\\"Email\\\" />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"sixteen wide column\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput [(ngModel)]=\\\"customer.address\\\" placeholder=\\\"Địa chỉ\\\" />\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"sixteen wide column\\\">\\r\\n    <mat-checkbox [(ngModel)]=\\\"customer.isActive\\\">Hoạt động</mat-checkbox>\\r\\n  </div>\\r\\n  <div class=\\\"actions\\\">\\r\\n    <button mat-flat-button (click)=\\\"doCancel()\\\">Hủy (Esc)</button>\\r\\n    <button mat-flat-button color=\\\"primary\\\" (click)=\\\"save()\\\">Lưu (F4)</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild, ElementRef, Input, EventEmitter, HostListener, Output } from '@angular/core';\nimport Customer from '../../../models/customer';\r\nimport CustomerService from '../../../services/customer.service';\r\nimport { Key } from 'ts-keycode-enum';\r\ndeclare var $: any;\r\n\n@Component({\n  selector: 'customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.scss']\n})\nexport class CustomerComponent implements OnInit {\n  constructor(private customerService: CustomerService) { }\n\n  @Input() id: number;\n  @Output() cancel = new EventEmitter();\n  @Output() commit = new EventEmitter();\n\n  @ViewChild('customerNameInput') customerNameInput: ElementRef;\n\n  @HostListener('keyup', ['$event']) onKeyup(e: KeyboardEvent) {\n    switch (e.keyCode) {\n      case Key.Escape:\n        this.doCancel();\n        break;\n      case Key.F4:\n        this.save();\n        break;\n    }\n  }\n\n  customer: Customer = new Customer();\n  customerTypes: any[];\n\n  ngOnInit() {\n    this.customerService.getCustomer(this.id).subscribe(customer => this.customer = customer);\n    this.customerService.getCustomerTypes().subscribe(types => this.customerTypes = types);\n  }\n\n  focus() {\n    $(this.customerNameInput.nativeElement).focus();\n  }\n\n  doCancel() {\n    this.cancel.emit();\n  }\n\n  save() {\n    this.customerService.save(this.customer);\n    this.commit.emit();\n  }\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CustomerListComponent } from './components/customer-list/customer-list.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { CustomerSearchComponent } from './components/customer-search/customer-search.component';\nimport { FormsModule } from '@angular/forms';\r\nimport { WidgetModule } from '../widgets/widget.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { routes } from './customer.routing'\r\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    WidgetModule,\n    FormsModule\n  ],\n  declarations: [\n    CustomerListComponent,\n    CustomerComponent,\n    CustomerSearchComponent\n  ],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class CustomerModule { }\n","import { Routes } from '@angular/router'\nimport { CustomerListComponent } from './components/customer-list/customer-list.component';\r\n\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomerListComponent\r\n  }\r\n];\r\n"],"sourceRoot":""}